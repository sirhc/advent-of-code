#!/usr/bin/env perl

use strict;
use v5.30;
use List::MoreUtils qw( pairwise );

#                    0 = (0, 1)
#                    ^
#                    |
#                    |
# 270 = (-1, 0) <----+----> 90 = (1, 0)
#                    |
#                    |
#                    v
#                    180 = (0, -1)

my @position  = ( 0, 0 );
my $heading   = 0;
my %translate = (
  0   => [  0,  1 ],  # north
  90  => [  1,  0 ],  # east
  180 => [  0, -1 ],  # south
  270 => [ -1,  0 ],  # west
);

say sprintf 'Start: (%d, %d, %d)', $heading, @position;

while ( my $line = <> ) {
  chomp $line;

  while ( $line =~ /([RL])(\d+)/g ) {
    my ( $turn, $distance ) = ( $1, $2 );

    $heading = ( $heading + 90 ) % 360 if $turn eq 'R';
    $heading = ( $heading - 90 ) % 360 if $turn eq 'L';

    @position = pairwise { $a + $distance * $b } @position, @{ $translate{ $heading } };

    say sprintf '%s%d: (%d, %d, %d)', $turn, $distance, $heading, @position;
  }
}

say abs($position[0]) + abs($position[1]);
