#!/usr/bin/env perl

use strict;
use v5.30;
use List::MoreUtils qw( pairwise );

# 1 2 3 -> (-1,  1) (0,  1) (1,  1)
# 4 5 6 -> (-1,  0) (0,  0) (1,  0)
# 7 8 9 -> (-1, -1) (0, -1) (1, -1)

my @position = (0, 0);
my %translate = (
  'U' => [ 0,  1],
  'D' => [ 0, -1],
  'L' => [-1,  0],
  'R' => [ 1,  0],
);

my %keypad = (
  '(-1, 1)' => 1,
  '(0, 1)'  => 2,
  '(1, 1)'  => 3,
  '(-1, 0)' => 4,
  '(0, 0)'  => 5,
  '(1, 0)'  => 6,
  '(-1, -1)' => 7,
  '(0, -1)'  => 8,
  '(1, -1)'  => 9,
);

my @code;

# say sprintf 'S (%d, %d)', @position;

while (<>) {
  chomp;

  for my $move ( split // ) {
    @position = map { $_ == 0 ? 0 : $_ / abs($_) } pairwise { $a + $b } @position, @{ $translate{ $move } };
    # say sprintf '%s (%d, %d)', $move, @position;
  }

  say sprintf '(%d, %d)', @position;
  push @code, $keypad{ sprintf '(%d, %d)', @position };
}

say join '', @code;
